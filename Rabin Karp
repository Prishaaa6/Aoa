def rabin_karp(text, pattern, prime=101):
    n = len(text)
    m = len(pattern)
    d = 256  
    h = pow(d, m-1) % prime  
    
    p_hash = 0  
    t_hash = 0  
    result = []

    for i in range(m):
        p_hash = (d * p_hash + ord(pattern[i])) % prime
        t_hash = (d * t_hash + ord(text[i])) % prime

    for i in range(n - m + 1):
        if p_hash == t_hash:
            if text[i:i+m] == pattern:
                result.append(i)

        if i < n - m:
            t_hash = (d * (t_hash - ord(text[i]) * h) + ord(text[i + m])) % prime
            if t_hash < 0:
                t_hash += prime

    return result

text = input("Enter the text: ")
pattern = input("Enter the pattern to search: ")

matches = rabin_karp(text, pattern)

if matches:
    print(f"Pattern found at positions: {matches}")
else:
    print("Pattern not found.")
